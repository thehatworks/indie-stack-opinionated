import * as z from "zod"
import { CompleteUserData, RelatedUserDataModel } from "./index"

export const NoteModel = z.object({
  /**
   * Unique note id
   * @default generated by prisma and cuid()
   */
  id: z.string(),
  /**
   * The note's title
   */
  title: z.string().min(1, "Title is required"),
  /**
   * The note's body text
   */
  body: z.string().min(1, "Body is required"),
  createdAt: z.date(),
  updatedAt: z.date(),
  /**
   * id of associated UserData entry (foreign key)
   */
  dataId: z.string(),
})

export interface CompleteNote extends z.infer<typeof NoteModel> {
  data: CompleteUserData
}

/**
 * RelatedNoteModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedNoteModel: z.ZodSchema<CompleteNote> = z.lazy(() => NoteModel.extend({
  /**
   * Associated UserData entry
   */
  data: RelatedUserDataModel,
}))
