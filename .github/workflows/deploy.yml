name: 🤸 Integrate & Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  static-analysis:
    name: 🔬 Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v3

      - name: 🛠 Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 📜 Lint
        run: npm run lint

      - name: ʦ Type check
        run: npm run typecheck

  nitpick-format:
    name: 🔬 Format & Check
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v3

      - name: 🛠 Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 📜 Lint Strict
        run: npm run lint:repo

      - name: 💄 Format
        run: npm run format

      - name: 📈 Check if format step made changes
        id: changes
        uses: UnicornGlobal/has-changes-action@v1.0.12

      - name: 💩 Fail if repo is dirty
        if: steps.changes.outputs.changed == 1
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('format your code before checkin!')

  unit-and-e2e-test:
    name: 🧪 Run Vitest unit & Cypress e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v3

      - name: 🛠 Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 📦 Setup Database
        run: npx prisma migrate reset --force

      - name: 💿 Remix Build
        run: npm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm run start:mocks
          wait-on: http://localhost:8811
        env:
          PORT: 8811

  deploy:
    name: 🎉 Deploy
    runs-on: ubuntu-latest
    needs: [static-analysis, unit-and-e2e-test] # don't care if strict format test fails
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Deploy Staging to Fly.io
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.4
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🎈 Deploy Production to Fly.io
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.4
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
